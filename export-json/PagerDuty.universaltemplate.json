{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "task is to create and update pager duty incident for task failures",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "fields": [
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "create_incident",
                    "fieldValueLabel": "Create Incident",
                    "sequence": 0,
                    "sysId": "f6eca2c12d7543eaa71c02daa4bbbd0a",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "list_incidents",
                    "fieldValueLabel": "List Incidents",
                    "sequence": 1,
                    "sysId": "2ca97f4d2a8545409485b07a31a17b7b",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "create_note",
                    "fieldValueLabel": "Update Incident Notes",
                    "sequence": 3,
                    "sysId": "da25b32153bf41659e2dc0cb5bfe7d2d",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "create_event",
                    "fieldValueLabel": "Create Event",
                    "sequence": 4,
                    "sysId": "f6aaf1f4b1ab41bcb8dbd3fae8873577",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "create_user",
                    "fieldValueLabel": "Create User",
                    "sequence": 5,
                    "sysId": "3d2e0909d4f74b8d870bdec8cee1cec4",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "delete_user",
                    "fieldValueLabel": "Delete User",
                    "sequence": 6,
                    "sysId": "3da27598761847238715d8243b644331",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "select the functions that needs to be performed in pagerduty",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "PagerDuty Function",
            "name": "function",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "cca5bf088065427fbeee8212399dfbf5"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "https://events.pagerduty.com/v2/enqueue",
                    "sequence": 0,
                    "sysId": "b5628b857c424bde906cf8874c891dcd",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "https://api.pagerduty.com/",
                    "sequence": 1,
                    "sysId": "ccfce2600035404fabf030fd33f3fab0",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 6",
            "fieldType": "Choice",
            "fieldValue": "event_url",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "For Event creation select : https://events.pagerduty.com/v2/enqueue and other functionality select : https://api.pagerduty.com/",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "PagerDuty API URL",
            "name": "api_url",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "472d46bf6f1f41dcba99431900ebae45"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 1",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the API token for incident and routing key for Event creation",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "PD API Token /Routing Key",
            "name": "api_token",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 2,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "98667060048b49df8e5cc8e6057168cd"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 10",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the valid Pager Duty user Email address",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "PD User Email",
            "name": "from_email",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 3,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident,create_note,create_user",
            "sysId": "6648e70f18e743e99209034549971edb"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "specify the incident title or an event summary",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Summary",
            "name": "incident_title",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 4,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident,create_event",
            "sysId": "64ba49b52edd42018fece5871aa3c7af"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 4",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide an Incident key for pagerduty incident e.g: Job Name",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Incident/Dedup Key",
            "name": "incident_key",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 5,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident,create_event",
            "sysId": "682950bb545f4bbfa4853ac40db17b77"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Service ID in pagerduty where the incident needs to be created",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "PagerDuty Service ID",
            "name": "service_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 6,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident,list_incidents",
            "sysId": "2ce5eca0e4784db990c371860ddc1b4c"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 3",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the incidents that needs to be in pager duty",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Incident Details",
            "name": "incident_details",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 8,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident",
            "sysId": "240929f19f4b46179374bb784a6c9404"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "high",
                    "fieldValueLabel": "high",
                    "sequence": 0,
                    "sysId": "59e11ff7a181478c9f15cbc199151fc2",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "low",
                    "fieldValueLabel": "low",
                    "sequence": 1,
                    "sysId": "07fd776ae5394118931a6d574dc37516",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 2",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the urgency of the job failure",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Urgency",
            "name": "urgency",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 9,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident",
            "sysId": "324be8f6504b4178bc9cbd90ba5489b1"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 6",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Conference Bridge Details for the meeting",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Conference Number",
            "name": "conference_number",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 10,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident",
            "sysId": "84d35b51e37d4bd8b851a8a4b6792a65"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 7",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "URL for the conference meeting",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Conference URL",
            "name": "conference_url",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 11,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_incident",
            "sysId": "9b6ee2e3849b43a58a760a9bb905b3fc"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 8",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the pager duty incident ID",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Incident ID",
            "name": "incident_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 12,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "list_alerts,create_note",
            "sysId": "0d4b76d2c22a4548ac3361261eb19e2b"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 9",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "Update the Incident Note",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Incident Note",
            "name": "incident_notes",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 13,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_note",
            "sysId": "aeaa312ea8fe4d05964507a679da4509"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "triggered",
                    "sequence": 0,
                    "sysId": "ead09ae267724a4d967d3a8e05d1ed35",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "resolved",
                    "sequence": 2,
                    "sysId": "9f5ae405d7aa47478ee16106c39d4e85",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "acknowledged",
                    "fieldValueLabel": "acknowledged",
                    "sequence": 3,
                    "sysId": "59eaeb6fd5a74ed5ba242abc93f46017",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 3",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "select the status for which the incident status to be retrieved",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Select Incident Status",
            "name": "incident_status",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 14,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "list_incidents",
            "sysId": "80e933da25c54e9b8ce587668fa3169c"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "trigger",
                    "sequence": 0,
                    "sysId": "dbc2f42b93f34dec86ebe45c5ff14b9e",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "acknowledge",
                    "sequence": 1,
                    "sysId": "9b3124b8fd714a829c2397df6c3c7700",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "resolve",
                    "sequence": 2,
                    "sysId": "352f0e6827c94dd58082229c2ab2f729",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 4",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the appropriate Event Action",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Event Action",
            "name": "event_action",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 15,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_event",
            "sysId": "980e80c4595748c280e5506f85e24a2c"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "critical",
                    "sequence": 0,
                    "sysId": "07452de2cf554b2e87059b7e2a5df315",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "error",
                    "sequence": 1,
                    "sysId": "e55c24dd120c4d209bf18bd3f92d70b1",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "warning",
                    "sequence": 2,
                    "sysId": "50523342865a44c8ae65c8e43db50cad",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "info",
                    "sequence": 3,
                    "sysId": "86fccd38e94f41d689a4153049e8b1a2",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 5",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "select either one of the status that would be appropriate",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Severity",
            "name": "severity",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 16,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_event",
            "sysId": "cf02fe7d53be4199ae2268de6d540f1f"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 5",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "The unique location of the affected system, preferably a hostname or FQDN.",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Event Source System",
            "name": "source",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 17,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_event",
            "sysId": "4b590fd10d354825a36890ae7a4a3052"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 11",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the job type which will fit in the component field of the pager duty event",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Job Type",
            "name": "job_type",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 18,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_event",
            "sysId": "a9c7d1b5b95a4154b8bcaf267227da57"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 12",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Job status that will fit in to the class field for the pager duty event creation",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Job Status",
            "name": "job_status",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 19,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_event",
            "sysId": "72cc4de02ce24390b7ba0bf89e1362ab"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 13",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "User ID",
            "name": "user_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 20,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "d5ad34016a364e978c7d0528096a6e8b"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 14",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Name of the pagerduty user",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Name",
            "name": "name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 21,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "3b7a8eff5af54b5b9e60300f7e486d21"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 15",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "User's Email Address",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "User Email Address",
            "name": "email_address",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 22,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user,delete_user",
            "sysId": "12e9e94361164d84a21f076787e887e1"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 16",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the Job Title of the user",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Job Title",
            "name": "job_title",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 23,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "b25ea6c58d684cdd94536c1d2aa6f479"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 17",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "The role of the user e.g: admin",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "User Role",
            "name": "role",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 24,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "0298fba2fe0e4c0b9922ff550d582642"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 18",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specify the user Time Zone",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Time Zone",
            "name": "timezone",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 25,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "7d44992a91c449c69f522ea4745fbd0e"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 19",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Summary about the user creation request",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Summary",
            "name": "summary",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 26,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create_user",
            "sysId": "7ef662802ab14c4cb9f9a88e868e74a7"
        }
    ],
    "name": "PagerDuty",
    "outputFailureOnly": false,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "NONE",
    "outputType": "STDOUT",
    "runtimeDir": null,
    "script": "#!/opt/universal/python3.6/bin/python3\n# --\n#         Origins: Stonebranch\n#          Author: Ravi Murugesan\n#            Date: 02-Aug-2020\n#\n#    Copyright (c) Stonebranch, 2019.  All rights reserved.\n#\n#         Purpose: This Task will create or update an incident in pagerduty in the event\n#                  of a Job Failure/long/later runs or any event that can trigger an alert  \n#                  for the job executing in stonebranch universal controller.\n#                  \n#\nversion = \"1.1\"\n#           Version History:    0.1     Ravi Murugesan     02-Aug-2020     Initial Version\n#                               1.0     Ravi Murugesan     03-Aug-2020     Baselined after initial review\n#                               1.1     Ravi Murugesan     03-Nov-2020     Add create user and delete user Functionality\n#\n# --Import the required modules for execution\nimport argparse, logging, sys, uuid, time, datetime, json, requests\n# -- loglevel settings INFO,DEBUG, WARNING, ERROR, CRITICAL\nlogging.basicConfig(level=logging.INFO, format=' %(asctime)s - %(levelname)s - %(message)s')\n# -- Main Logic Function\ndef main():\n    ScriptSetup()                                               # -- Import Required Modules, Setup Logging Format, Set Variables \n    if args.function == \"create_incident\":\n        create_incident()\n    elif args.function == \"list_incidents\":\n        list_incidents()\n    elif args.function == \"create_note\":\n        create_note()\n    elif args.function == \"create_event\":\n        create_event()\n    elif args.function == \"create_user\":\n        create_user()\n    elif args.function == \"delete_user\":\n        delete_user()                                  \n                     \n# --\n# -- Import Required Modules, Setup Logging Format, Set Variables \ndef ScriptSetup():\n    parser=argparse.ArgumentParser(description='Purpose : Azure VM operations')\n    \n    # ## --> Capture Universal Task Form Variables Here\n    parser.add_argument(\"--function\", default=\"${ops_pd_function}\")\n    parser.add_argument(\"--incident_title\", default=\"${ops_pd_incident_title}\")\n    parser.add_argument(\"--service_id\", default=\"${ops_pd_service_id}\")\n    parser.add_argument(\"--incident_details\", default=\"${ops_pd_incident_details}\")\n    parser.add_argument('--urgency', default='${ops_pd_urgency}')\n    parser.add_argument('--conference_number', default='${ops_pd_conference_number}')\n    parser.add_argument('--conference_url', default='${ops_pd_conference_url}')\n    parser.add_argument('--incident_id', default='${ops_pd_incident_id}')\n    parser.add_argument('--incident_notes', default='${ops_pd_incident_notes}')\n    parser.add_argument('--api_token', default=\"${_credentialPwd('${ops_pd_api_token}')}\")\n    parser.add_argument('--from_email', default='${ops_pd_from_email}')\n    parser.add_argument('--incident_key',default='${ops_pd_incident_key}')\n    parser.add_argument('--incident_status',default='${ops_pd_incident_status}')\n    parser.add_argument('--event_action',default='${ops_pd_event_action}')\n    parser.add_argument('--severity',default='${ops_pd_severity}')\n    parser.add_argument('--source',default='${ops_pd_source}')\n    parser.add_argument('--job_type',default='${ops_pd_job_type}')\n    parser.add_argument('--job_status',default='${ops_pd_job_status}')\n    parser.add_argument('--api_url',default='${ops_pd_api_url}')\n    parser.add_argument('--user_id',default='${ops_pd_user_id}')\n    parser.add_argument('--name',default='${ops_pd_name}')\n    parser.add_argument('--email_address',default='${ops_pd_email_address}')\n    parser.add_argument('--job_title',default='${ops_pd_job_title}')\n    parser.add_argument('--role',default='${ops_pd_role}')\n    parser.add_argument('--timezone',default='${ops_pd_timezone}')\n    parser.add_argument('--summary',default='${ops_pd_summary}')\n\n    \n    # ## --\n    global args\n    args = parser.parse_args()\n    # ## --> Logging info\n    parser.add_argument(\"--logginglevel\", default=\"info\")\n    logging.info(\"Executing version \" + version + \" with the following paramaters\")\n    logging.info(args)\n# --\n#\n###########################################################################################################################\n# This function is to create the incident in pagerduty and if duplicate error on incident creation then a note will be \n# added to the latest open incident for the job Failure\n###########################################################################################################################\ndef create_incident():\n    logging.info(\"Pager Duty for Incident creation\")\n    # -- Set the request parameters\n    url = args.api_url+'incidents'\n    logging.info(\"PagerDuty URL: \"+url)\n    header={\n        'Authorization':'Token token='+args.api_token,\n        'content-type':'application/json', \n        'accept':'application/vnd.pagerduty+json;version=2',\n        'from':args.from_email\n        }\n\n    body={\n        \"incident\": {\n        \"type\": \"incident\",\n        \"title\": args.incident_title,\n        \"service\": {\n            \"id\": args.service_id,\n            \"type\": \"service_reference\"\n        },\n        \"urgency\": args.urgency,\n        \"incident_key\": args.incident_key,\n        \"body\": {\n            \"type\": \"incident_body\",\n            \"details\": args.incident_details\n            },\n        \"conference_bridge\": {\n            \"conference_number\": args.conference_number,\n            \"conference_url\": args.conference_url\n            }\n    }\n    }\n    logging.info('Message formated to post pagerduty API ')\n    try:\n        logging.info('Attempting to make API call to PagerDuty')\n        response=requests.post(url,data=json.dumps(body),headers=header)\n        format_response=response.json()\n        print(response.text)\n        if (response.status_code != 201):\n            duplicate_key_error=False\n            logging.error(\"Error in creating the incident in Pagerduty \")\n            for pd_error in format_response['error']['errors']:\n                if \"key already exists on this service\" in pd_error:\n                    duplicate_key_error=True\n                    ##if incident already exists with the incident key then fetch the latest incident with that key\n                    try:\n                        url=args.api_url+'incidents?incident_key='+args.incident_key\n                        header={\n                                'Authorization':'Token token='+args.api_token,\n                                'content-type':'application/json', \n                                'accept':'application/vnd.pagerduty+json;version=2'\n                                }\n                        logging.info(\"Checking existing incidents with the same Incident Key\")\n                        get_incident=requests.get(url,headers=header)\n                        if get_incident.status_code == 200:\n                            incident_list=get_incident.json()\n                            for incident in incident_list['incidents']:\n                                incident_number=incident['incident_number']\n                            logging.info(\"PagerDuty Incident ID :\"+str(incident_number)+\" notes will be update with latest job failure info\")\n                            try:\n                                url=args.api_url+'incidents/'+str(incident_number)+'/notes'\n                                header={\n                                    'Authorization':'Token token='+args.api_token,\n                                    'content-type':'application/json', \n                                    'accept':'application/vnd.pagerduty+json;version=2',\n                                    'from':args.from_email\n                                    }\n                                body={\n                                    \"note\": {\n                                        \"content\": args.incident_details\n                                        }\n                                        }\n                                req_update_notes=requests.post(url,data=json.dumps(body),headers=header)\n                                if req_update_notes.status_code == 201:\n                                    #res_update_notes_format=req_update_notes.json()\n                                    logging.info(\"Pager Duty Incident: \"+str(incident_number)+\" Notes updated successfully\")\n                                    print(\"Incident: \"+str(incident_number)+\" Notes Updated\")\n                                else:\n                                    logging.error(\"Error in updating Notes for Incident: \"+str(incident_number))\n                                    logging.error(\"API RC: \"+str(req_update_notes.status_code))\n                                    logging.error(\"Error Message : \"+req_update_notes.text)\n                                    sys.exit(1)\n                            except Exception as e:\n                                logging.error(\"Error in Updating Notes for the Incident\")\n                                logging.error(e)\n                                sys.exit(1)\n                        else:\n                            logging.error(\"Error in Fetching the incident with Incident Key: \"+str(args.incident_key))\n                            sys.exit(1)\n                    except Exception as e:\n                        logging.error (\"Error in fetching PagerDuty Incident list\")\n                        logging.error(e)\n                        sys.exit(1)\n            if not duplicate_key_error:\n                logging.error(\"API Call to PagerDuty Failed with RC : \"+str(response.status_code))\n                logging.error(\"Pager Duty Error Message : \"+response.text)\n                sys.exit(1)\n        else:\n            print(\"*************************************************************\")\n            print(\"Pager Duty Incident Number: \"+str(format_response['incident']['incident_number']))\n            print(\"Incident Status : \"+format_response['incident']['status'])\n            print(\"First trigger Log entry:\"+format_response['incident']['first_trigger_log_entry']['html_url'])\n            print(\"*************************************************************\")\n            logging.info(\"Response from Pager Duty :\"+str(response.text))\n    except Exception as e:\n        logging.error(\" Error Response :\"+ response.text)\n        logging.error(e)\n        sys.exit(1)\n\n#***********************************************************************************************************************\n#This Function is to list out the alerts thats been sent out for an incident from pagerduty\n#***********************************************************************************************************************\ndef create_note():\n    try:\n        logging.info(\"Initiating Call to PagerDuty to Update Incident : \"+args.incident_id)\n        url=args.api_url+'incidents/'+str(args.incident_id)+'/notes'\n        header={\n            'Authorization':'Token token='+args.api_token,\n            'content-type':'application/json', \n            'accept':'application/vnd.pagerduty+json;version=2',\n            'from':args.from_email\n            }\n        body={\n            \"note\": {\n                \"content\": args.incident_notes\n                }\n                }\n        req_update_notes=requests.post(url,data=json.dumps(body),headers=header)\n        if req_update_notes.status_code == 201:\n            #res_update_notes_format=req_update_notes.json()\n            logging.info(\"PagerDuty Response: \"+req_update_notes.text)\n            logging.info(\"Pager Duty Incident: \"+str(args.incident_id)+\" Notes updated successfully\")\n            print(\"Incident: \"+str(args.incident_id)+\" Notes Updated\")\n        else:\n            logging.error(\"Error in updating Notes for Incident: \"+str(args.incident_id))\n            logging.error(\"API RC: \"+str(req_update_notes.status_code))\n            logging.error(\"Error Message : \"+req_update_notes.text)\n            sys.exit(1)\n    except Exception as e:\n        logging.error(\"Error in Updating Notes for the Incident\")\n        logging.error(e)\n        sys.exit(1)\n\n#***********************************************************************************************************************\n#This Function will create an User in pagerduty\n#***********************************************************************************************************************\ndef create_user():\n    try:\n        logging.info(\"Initiating Call to PagerDuty to Create User \")\n        url=args.api_url+'users'\n        header={\n            'Authorization':'Token token='+args.api_token,\n            'content-type':'application/json', \n            'accept':'application/vnd.pagerduty+json;version=2',\n            'from':args.from_email\n            }\n        body={\n              \"user\": {\n              \"id\": args.user_id,\n              \"summary\": args.summary,\n              \"type\": \"user\",\n              \"name\": args.name,\n              \"email\": args.email_address,\n              \"time_zone\": args.timezone,\n              \"role\": args.role,\n              \"job_title\": args.job_title\n               }\n                }\n        req_create_user=requests.post(url,data=json.dumps(body),headers=header)\n        if req_create_user.status_code == 201:\n            res_create_user_format=req_create_user.json()\n            logging.info(\"PagerDuty Response: \"+req_create_user.text)\n            logging.info(\"User created in Pagerduty successfully\")\n            print(\"User Details: \"+str(res_create_user_format))\n        else:\n            logging.error(\"Error Creating User in Pager Duty:\")\n            logging.error(\"API RC: \"+str(req_create_user.status_code))\n            logging.error(\"Error Message : \"+req_create_user.text)\n            sys.exit(1)\n    except Exception as e:\n        logging.error(\"Error in User Creation - PagerDuty\")\n        logging.error(e)\n        sys.exit(1)\n#***********************************************************************************************************************\n#This Function will delete an user in PagerDuty\n#***********************************************************************************************************************\ndef delete_user():\n    try:\n        logging.info(\"Initiating Call to PagerDuty \")\n        user_find_url=args.api_url+'/users?query='+args.email_address\n        header={\n            'Authorization':'Token token='+args.api_token,\n            'content-type':'application/json', \n            'accept':'application/vnd.pagerduty+json;version=2'\n            }\n        queryuser=requests.get(user_find_url,headers=header)\n        queryuser_format=queryuser.json()\n        if queryuser.status_code == 200:\n            pd_user_id=queryuser_format['users'][0]['id']\n            logging.info(\"User found in Pagerduty with ID: \"+pd_user_id)\n            print(\"Pagerduty User details :\",queryuser.text)\n            logging.info(\"Initiate Pagerduty to delete user\")\n            user_delete_url=args.api_url+'users/'+pd_user_id\n            req_delete_user=requests.delete(user_delete_url,headers=header)\n            if req_delete_user.status_code == 204:\n                logging.info(\"User Deleted in Pagerduty successfully\")\n                print(\"User: \"+args.user_id+\" deleted in Pagerduty\")\n            else:\n                logging.error(\"Error Deleting User in Pager Duty:\")\n                logging.error(\"API RC: \"+str(req_delete_user.status_code))\n                logging.error(\"Error Message : \"+req_delete_user.text)\n                sys.exit(1)\n        else:\n            logging.error(\"Error Retrieving user details in PagerDuty\")\n            logging.error(\"Pagerduty user Search Return code :\"+queryuser.status_code)\n            logging.error(\"Pagerduty Error Response :\"+queryuser.text)\n            sys.exit(1)\n    except Exception as e:\n        logging.error(\"Pager Duty Search response: \"+queryuser.text)\n        logging.error(\"Pager Duty Deletion response: \"+req_delete_user.text)\n        logging.error(\"Error in User Deletion - PagerDuty\")\n        logging.error(e)\n        sys.exit(1)\n\n###################################################################################################################\n#This function will retrieve the list of incidents in pager duty by status\n###################################################################################################################\n\ndef list_incidents():\n    logging.info(\"Initiating Request to PagerDuty\")\n    try:\n        url=args.api_url+'incidents?statuses%5B%5D='+args.incident_status+'&service_ids%5B%5D='+args.service_id\n        logging.info(\"URL : \"+url)\n        header={\n             'Authorization':'Token token='+args.api_token,\n             'content-type':'application/json', \n             'accept':'application/vnd.pagerduty+json;version=2'\n                }\n\n        get_incident=requests.get(url,headers=header)\n        if get_incident.status_code == 200:\n            incident_list=get_incident.json()\n            logging.info(\"API Call to PagerDuty Successful :\"+str(get_incident.status_code))\n            print(\"************************************************************************************\")\n            print(\"Incident Number , Incident title , Incident Creation_Date, Status\")\n            for incident in incident_list['incidents']:\n                print(str(incident['incident_number'])+','+incident['title']+','+incident['created_at']+','+incident['status'])\n            print(\"************************************************************************************\")\n        else:\n            logging.error(\"Error in Fetching the incident list - API RC: \"+str(get_incident.status_code))\n            logging.error(get_incident.text)\n            sys.exit(1)\n    except Exception as e:\n        logging.error (\"Error in fetching PagerDuty Incident list\")\n        logging.error(e)\n        sys.exit(1)\n\n#######################################################################################################################################\n# This function will trigger an event to Pager Duty , So that an Alert will Pager Duty \n#######################################################################################################################################\ndef create_event():\n    try:\n        logging.info(\"Initiate Request to generate an PagerDuty Event\")\n        url=args.api_url\n        header={\n            'content-type':'application/json'\n        }\n        body={\n            \"payload\": {\n                \"summary\": args.incident_title,\n                \"source\": args.source,\n                \"severity\": args.severity,\n                \"component\": args.job_type,\n                \"class\": args.job_status\n            },\n            \"routing_key\": args.api_token,\n            \"dedup_key\": args.incident_key,\n            \"event_action\": args.event_action\n        }\n        response=requests.post(url,data=json.dumps(body),headers=header)\n        format_response=response.json()\n        if response.status_code == 202:\n            print(format_response['message']+\" with \"+format_response['status']+\"- dedup Key: \"+str(format_response['dedup_key']))\n            logging.info(\"Event Sent to PagerDuty Successfully\")\n        else:\n            logging.error(\"API RC: \"+str(response.status_code))\n            logging.error(\"Error triggering event to pager Duty\"+str(response.text))\n            sys.exit(1)\n    except Exception as e:\n        logging.error(\"Error in posting an event to Pagerduty\")\n        logging.error(e)\n        sys.exit(1)\n\n\n# ## --> Functions Go Here\n# --\n# -- Execute\nmain()",
    "scriptTypeWindows": "uapy",
    "scriptUnix": null,
    "scriptWindows": null,
    "sysId": "ca5688817f2245db925a15b9d017a92a",
    "useCommonScript": true,
    "variablePrefix": "pd",
    "waitForOutput": false
}